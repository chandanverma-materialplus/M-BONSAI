services:
  frontend:
    build: .
    image: bonsai-frontend:1.0.0
    container_name: bonsai-frontend
    ports:
      - "3010:3000"
    environment:
      NODE_ENV: "production"
      NEXT_PUBLIC_APP_NAME: "M+ BonsAI"
      NEXT_PUBLIC_APP_VERSION: "1.0.0"
    restart: unless-stopped
    networks: [bonsai-network]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Hot-reload container for local work (optional)
  frontend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev           # keep your Dev Dockerfile
    container_name: bonsai-frontend-dev
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: "development"
      NEXT_PUBLIC_APP_NAME: "M+ BonsAI"
      NEXT_PUBLIC_APP_VERSION: "1.0.0-dev"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    restart: unless-stopped
    networks: [bonsai-network]
    profiles: ["dev"]

  # Optional backing services
  redis:
    image: redis:7-alpine
    container_name: bonsai-redis
    command: ["redis-server", "--appendonly", "yes"]
    ports: ["6379:6379"]
    volumes: [redis_data:/data]
    restart: unless-stopped
    networks: [bonsai-network]
    profiles: ["production"]

  postgres:
    image: postgres:15-alpine
    container_name: bonsai-postgres
    environment:
      POSTGRES_DB: bonsai
      POSTGRES_USER: bonsai_user
      POSTGRES_PASSWORD: bonsai_password
    ports: ["5433:5432"]
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks: [bonsai-network]
    profiles: ["production"]

  # nginx:
  #   image: nginx:alpine
  #   container_name: bonsai-nginx
  #   depends_on: [frontend]
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   restart: unless-stopped
  #   networks: [bonsai-network]
  #   profiles: ["production"]

networks:
  bonsai-network:
    driver: bridge

volumes:
  redis_data:
  postgres_data:
